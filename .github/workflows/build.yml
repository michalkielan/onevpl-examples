name: build

on: [push, pull_request]

env:
  LD_LIBRARY_PATH: /usr/local/lib64:/usr/local/lib/

jobs:
  build:
      runs-on: ubuntu-20.04
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install pylint flake8

      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            build-essential \
            jq \
            libdrm-dev \
            libva-dev \
            libva-drm2 \
            meson \
            nasm \
            ninja-build \
            pybind11-dev \
            python3-pybind11 \
            yasm \

      - name: Install libva
        run: |
          git clone -b 2.14.0 --depth=1 https://github.com/intel/libva libva
          cd libva
          ./autogen.sh
          ./configure
          make
          sudo make install

      - name: Install onevpl
        run: |
          git clone -b v2022.1.5 https://github.com/oneapi-src/oneVPL onevpl
          cd onevpl
          mkdir build && cd build
          cmake -GNinja -DBUILD_PYTHON_BINDING=ON ..
          ninja
          sudo ninja install

      - name: Install onevpl-cpu
        run: |
          git clone -b v2022.1.5 https://github.com/oneapi-src/oneVPL-cpu onevpl-cpu
          cd onevpl-cpu
          source script/bootstrap
          script/build
          sudo script/install

      - name: Build examples
        run: |
          make

      - name: Python syntax check
        env:
          PYTHONPATH: /usr/local/lib/python
        run: |
          pylint *.py --errors-only
          flake8 *.py --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 *.py --count --exit-zero --statistics

      - name: Run encode example (C++)
        run: |
          ./hello_encode -i cars_320x240.i420 -h 320 -w 240
          ./hello_encode -i cars_320x240.i420 -h 320 -w 240 -r 30 -c hevc -o out.hevc
          cat cars_320x240.json | jq empty

      - name: Run encode example (Python)
        env:
          PYTHONPATH: /usr/local/lib/python
        run: |
          python hello_encode.py
